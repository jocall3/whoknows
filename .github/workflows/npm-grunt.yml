name: Node.js CI/CD with Dependency Caching

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest # Or your preferred runner OS

    strategy:
      matrix:
        node-version: [22.x] # Use your desired Node.js version(s)

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        # Cache npm dependencies with actions/setup-node. This is often preferred
        # over a separate actions/cache step for npm, as it handles paths correctly.
        cache: 'npm' 
        # If you were using Yarn, set cache: 'yarn'
        # If you were using pnpm, set cache: 'pnpm'

    - name: Install Dependencies
      run: npm install # This step will benefit from the cache configured above

    - name: Run Build
      run: npm run build # Or `grunt build` if Grunt is still explicitly needed here
                         # (assuming 'build' script is defined in package.json)

    # Optional: If your project has a test script, add a testing step
    - name: Run Tests
      run: npm run test # Or `npm run test`

    # Optional: If you need to deploy or upload artifacts after a successful build
    # - name: Deploy (e.g., to S3, Netlify, etc.)
    #   run: |
    #     echo "Deployment commands here"

    # - name: Upload Build Artifacts
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: my-app-build-${{ github.sha }}
    #     path: ./dist # Adjust to your build output directory
